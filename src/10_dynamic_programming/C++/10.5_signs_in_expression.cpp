/*
Пусть задана последовательность неотрицательных чисел:
    a1, a2, ..., an,  где (ai ⩾ 0)
Требуется расставить знаки +, * и скобки в последовательности так,
чтобы значение полученного арифметического выражения было максимальным.
*/


#include <iostream>
#include <vector>


int arranging_signs(const std::vector<int>& nums)
{
    /*
        Для поиска максимального значения математического выражения будем
        постепенно его наращивать.

        Допустим у нас есть последовательность чисел (2, 4, 1) к которой
        добавляем новое число (1)
        Для нахождения максимума мы должны просмотреть следующие варианты
        max(2, 4, 1)    +|*     max(1)
        max(2, 4)       +|*     max(1, 1)
        max(2)          +|*     max(4, 1, 1)

        И выбрать из них наибольший. Но предварительно необходимо рассчитать
        значения максимумов из второй колонки. Этот алгоритм удобно представить
        в виде таблицы, двигаться будем по диагонали, а затем снизу вверх, тем
        самым рассчитывая последовательно все значения из второй колонки.
    */


    std::vector<std::vector<int>> dp(nums.size(),
                                     std::vector<int>(nums.size(), 0));


    int sub_exp_1 = 0;
    int sub_exp_2 = 0;
    for (int i = 0; i < nums.size(); ++i) {
        // Значение на диагонали соответствует максимуму из одного числа, т.е.
        // равно самому этому числу
        dp[i][i] = nums[i];

        // Далее начинаем подниматься вверх, вычисляя попутно все промежуточные
        // максимумы. Например для (2, 1, 1) - это max(1, 1) и max(2, 1, 1)
        for (int j = i - 1; j >= 0; --j) {
            for (int k = j; k < i; ++k) {
                sub_exp_1 = dp[j][k];
                sub_exp_2 = dp[k + 1][i];
                dp[j][i] = std::max({sub_exp_1 + sub_exp_2,
                                     sub_exp_1 * sub_exp_2,
                                     dp[j][i]
                                    });
            }
        }
    }

    return dp[0][nums.size() - 1];
}



int main(int, char**)
{
    std::vector<int> nums = {2, 1, 1, 2};
    std::cout << arranging_signs(nums);
    return 0;
}



